{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutlinks","state","console","log","firebase","links","uid","SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","disptach","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rffProps","useFirestoreForProfile","config","attachAuthIsReady","userProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c6bfac81.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut} >Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n          { props.profile.initials}\r\n          \r\n          </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n  \r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n\r\n  export const signUp = (newUser) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n\r\n      firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n      ).then((resp) => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0] \r\n        })\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' })\r\n      }).catch(err => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err})\r\n      })\r\n    }\r\n  }","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutlinks = () =>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutlinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">Plan Project </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   console.log(state);\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications </span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title} &#127919;</span>\r\n                <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList =({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project => {\r\n                return(\r\n                    <Link to={'/project/' + project.id} key={ project.id} >\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                    )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n      //console.log(this.props)\r\n      const { projects, auth, notifications } = this.props;\r\n      if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n      return (\r\n        <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <ProjectList projects={projects} />\r\n            </div>\r\n            <div className=\"col s12 m5 offset=m1\">\r\n              <Notifications notifications={notifications} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy : ['createdAt', 'desc']},\r\n    { collection: 'notifications', limit:3, orderBy : ['time', 'desc']}\r\n  ])\r\n)(Dashboard) ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose} from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjecrDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project){\r\n        return(\r\n        <div className=\"container section project-details\">\r\n            <div className=\" card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{ project.title} </span>\r\n                    <p> {project.content } </p>\r\n                </div>\r\n                <div className=\"card-section gret lighten-4 grey-text\">\r\n                    <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>        \r\n        )\r\n    } else{\r\n        return(\r\n        <div className=\"container center\">\r\n            <p> Loadin' Project...</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id]: null\r\n    return{\r\n        project:project,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(ProjecrDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\n\r\nclass SignUp extends Component {\r\n    state ={\r\n        email: '',\r\n        password: '',\r\n        firstName:'',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n\r\n    }   \r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className=\"input-feild\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-feild\">\r\n                    <label htmlFor=\"password\">Password</  label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-feild\">\r\n                    <label htmlFor=\"firstName\">First Name</  label>\r\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-feild\">\r\n                    <label htmlFor=\"lastName\">Last Name</  label>\r\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-feild\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p> { authError}</p> : null }\r\n                    </div>\r\n                </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth : state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject} from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state ={\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }   \r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                <div className=\"input-feild\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-feild\">\r\n                    <label htmlFor=\"content\">Project Content</  label>\r\n                    <textarea id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                                    \r\n                </div>\r\n                <div className=\"input-feild\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","export const createProject =(project) => {\r\n    return (disptach, getState, { getFirebase, getFirestore}) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() =>{\r\n            disptach({ type: 'CREATE_PROJECT',project});   \r\n        }).catch((err) => {\r\n            disptach({type : 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n    }\r\n};    \r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn}/>\n          <Route path='/signup' component={SignUp}/>\n          <Route path='/create' component={CreateProject}/>\n        </Switch>\n       </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n  }\r\n  \r\n  const authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n      case 'LOGIN_ERROR':\r\n        console.log('login error');\r\n        return {\r\n          ...state,\r\n          authError: 'Login failed'\r\n        }\r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login success');\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n      case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state\r\n      case 'SIGNUP_SUCCESS':\r\n        console.log('signup success')\r\n        return{\r\n          ...state,\r\n          authError: null\r\n        }\r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup error')\r\n        return {\r\n          ...state,\r\n          authError: action.err.message\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n  \r\n  export default authReducer;","const initState ={\r\n    projects:[\r\n        {id: '1', title: 'help me find peach', content: 'blahhh blahhhhh blahhhhhh'},\r\n        {id: '2', title: 'collect all the stars', content: 'blahhh blahhhhh blahhhhhh'},\r\n        {id: '2', title: 'egg hunt with gaurij', content: 'blahhh blahhhhh blahhhhhh'}\r\n    ]\r\n}\r\n\r\nconst projectReducer =(state= initState,action) =>{\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT' :\r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR' :\r\n            console.log('create project error', action.err)\r\n            return state;\r\n\r\n        default:\r\n            return state \r\n    }\r\n}\r\n\r\nexport default projectReducer ","import authReducer from './authReducer'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer =  combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n})\r\n\r\nexport default rootReducer\r\n ","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/firebase-auth'\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyARkZqcuFG6ma3xiPuib7fyK--B5ZT9eJA\",\r\n    authDomain: \"project-management-app-248a2.firebaseapp.com\",\r\n    databaseURL: \"https://project-management-app-248a2.firebaseio.com\",\r\n    projectId: \"project-management-app-248a2\",\r\n    storageBucket: \"project-management-app-248a2.appspot.com\",\r\n    messagingSenderId: \"311906388564\",\r\n    appId: \"1:311906388564:web:4f43b64f2cf6ab49b07bc1\",\r\n    measurementId: \"G-1398HP07KF\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n\r\n\r\nexport default firebase\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport firebase from './config/fbConfig'\n\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\n\nimport 'firebase/firestore';\n\nconst rrfConfig = { \n    attachAuthIsReady:true,\n    useFirestoreForProfile:true,\n    userProfile: 'users',\n}\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase)\n    )\n);\n\nconst rffProps = {\n    firebase,\n    useFirestoreForProfile: true,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rffProps}>\n            <App />  \n        </ReactReduxFirebaseProvider>\n    </Provider>, \ndocument.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}